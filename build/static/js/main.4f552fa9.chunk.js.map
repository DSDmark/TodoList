{"version":3,"sources":["Context/Context.tsx","Context/TodoContext.tsx","Components/TodoList/ToggleTodo.tsx","Components/TodoList/ShowList.tsx","Components/TodoList/TodoItemsList.tsx","Components/AddTodolist/AddListElements.tsx","Components/AddTodolist/AddTodo.tsx","Components/DeleteTodolist/DeleteTodo.tsx","Components/DeleteTodolist/DeleteTodolist.tsx","Components/Heading/MainHeading.tsx","App.tsx","index.tsx"],"names":["todoContext","createContext","TodoData","id","v4","text","isTodoDone","TodoContext","props","useState","state","setState","Provider","value","children","ToggleTodo","perv","map","e","ShowList","Data","useContext","style","listStyle","htmlFor","role","fontSize","onClick","textDecoration","TodoItemsList","AddListElements","inputState","setInputState","preventDefault","newAddTodo","Date","getTime","AddTodo","type","onChange","target","DeleteTodo","filter","DeleteTodolist","Heading","textAlign","App","rootElement","document","getElementById","ReactDOMClient","render"],"mappings":"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","file":"static/js/main.4f552fa9.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nconst todoContext = createContext<any | null>(null);\n\nexport default todoContext;\n","import React, { useState } from 'react';\nimport todoContext from './Context';\nimport { v4 } from 'uuid';\n\ninterface Props {\n    children: React.ReactNode;\n}\n\nconst TodoData: Todo[] = [\n    {\n        id: v4(),\n        text: 'Get a Problem',\n        isTodoDone: false,\n    },\n    {\n        id: v4(),\n        text: 'Feel along',\n        isTodoDone: true,\n    },\n    {\n        id: v4(),\n        text: 'Just call me',\n        isTodoDone: true,\n    },\n    {\n        id: v4(),\n        text: 'On a telephone',\n        isTodoDone: false,\n    },\n];\n\nconst TodoContext = (props: Props) => {\n    const [state, setState] = useState(TodoData);\n    return (\n        <>\n            <todoContext.Provider value={[state, setState]}>{props.children}</todoContext.Provider>\n        </>\n    );\n};\n\nexport default TodoContext;\n","\nexport const ToggleTodo = (id: string, setState: Function) => {\n    setState((perv: Todo) => perv.map((e: Todo) => (e.id === id ? { ...e, isTodoDone: !e.isTodoDone } : e)));\n};\n","import React, { FC, useContext } from 'react';\nimport { todoContext } from '../../Context';\nimport { ToggleTodo } from './ToggleTodo';\nimport { DeleteTodolist } from '../index';\n\ninterface Props {\n    Data: Todo;\n}\nconst ShowList: FC<Props> = ({ Data }) => {\n    const [, setState] = useContext<any>(todoContext);\n    return (\n        <>\n            <ul>\n                <li style={{ listStyle: 'none' }}>\n                    <DeleteTodolist id={Data.id} />\n                    <label htmlFor=\"textInput\">\n                        <span\n                            role=\"img\"\n                            aria-label=\"emojis\"\n                            style={{ fontSize: '2rem' }}\n                            onClick={() => ToggleTodo(Data.id, setState)}\n                        >\n                            {Data.isTodoDone ? 'ðŸ‘»' : 'ðŸ’€'}\n                        </span>\n                        <span\n                            style={{\n                                fontSize: '1.5rem',\n                                textDecoration: Data.isTodoDone ? 'line-through' : '',\n                            }}\n                            onClick={() => ToggleTodo(Data.id, setState)}\n                        >\n                            {Data.text}\n                        </span>\n                    </label>\n                </li>\n            </ul>\n        </>\n    );\n};\n\nexport default ShowList;\n","import { FC, useContext } from 'react';\nimport { todoContext } from '../../Context';\nimport ShowList from './ShowList';\n\n\nexport const TodoItemsList: FC = () => {\n    const [state] = useContext<Todo[]>(todoContext);\n    return (\n        <>\n            {state.map((Data: Todo) => (\n                <ShowList key={Data.id} Data={Data} />\n            ))}\n        </>\n    );\n};\n","\nconst AddListElements: (\n    e: any,\n    inputState: string,\n    setInputState: React.Dispatch<React.SetStateAction<string>>,\n    setState: React.Dispatch<React.SetStateAction<any>>,\n) => void = (e, inputState, setInputState, setState) => {\n    e.preventDefault();\n    const newAddTodo = {\n        id: new Date().getTime(),\n        text: inputState,\n        isTodoDone: false,\n    };\n\n    setState((perv: Todo[]) => [...perv, newAddTodo]);\n    setInputState('');\n};\n\nexport default AddListElements;\n","import React, { useState, FC } from 'react';\nimport AddListElements from './AddListElements';\nimport { todoContext } from '../../Context';\nimport { useContext } from 'react';\n\nconst AddTodo: FC = () => {\n    const [, setState] = useContext<any>(todoContext);\n\n    const [inputState, setInputState] = useState<string>('');\n    return (\n        <>\n            <div>\n                <label htmlFor=\"addTodo\">\n                    <input\n                        type=\"text\"\n                        id=\"addTodo\"\n                        onChange={(e) => setInputState(e.target.value)}\n                        value={inputState}\n                    />\n                    <button onClick={(e) => AddListElements(e, inputState, setInputState, setState)}>AddTodo</button>\n                </label>\n            </div>\n        </>\n    );\n};\n\nexport default AddTodo;\n","\nconst DeleteTodo = (id: string, setState: React.Dispatch<React.SetStateAction<Todo>>) => {\n    setState((perv: Todo) => perv.filter((e: Todo) => e.id !== id));\n};\n\nexport default DeleteTodo;\n","import React, { useContext, FC } from 'react';\nimport { todoContext } from '../../Context';\nimport DeleteTodo from './DeleteTodo';\n\ninterface Props {\n    id: string;\n}\n\nconst DeleteTodolist: FC<Props> = ({ id }) => {\n    const [, setState] = useContext(todoContext);\n    return (\n        <span\n            role=\"img\"\n            aria-label=\"edit todo list\"\n            style={{ fontSize: '1.5rem' }}\n            onClick={() => DeleteTodo(id, setState)}\n        >\n            ðŸ”´\n        </span>\n    );\n};\n\nexport default DeleteTodolist;\n","import React from 'react';\n\nconst Heading = () => (\n    <>\n        <div style={{ textAlign: 'center' }}>\n            <h1>\n                Your First Application&nbsp;\n                <span role=\"img\" aria-label=\"simple emoji\">\n                    ðŸ§ž\n                </span>\n            </h1>\n            <h2>\n                Walcome to Webdev{' '}\n                <span role=\"img\" aria-label=\"simple emoji\">\n                    ðŸ˜Š\n                </span>\n            </h2>\n        </div>\n    </>\n);\n\nexport default Heading;\n","import React, { FC } from 'react';\nimport { TodoItemsList, AddTodo, Heading } from './Components';\nimport { TodoContext } from './Context';\nimport './style.css';\n\nexport const App: FC = () => {\n    return (\n        <>\n            <TodoContext>\n                <pre>\n                    <Heading />\n                    <AddTodo />\n                    <TodoItemsList />\n                </pre>\n            </TodoContext>\n        </>\n    );\n};\n","import React, { StrictMode } from 'react';\nimport * as ReactDOMClient from 'react-dom/client';\n\nimport { App } from './App';\n\nconst rootElement = document.getElementById('root');\nconst root = ReactDOMClient.createRoot(rootElement);\n\nroot.render(\n    <StrictMode>\n        <App />\n    </StrictMode>,\n);\n"],"sourceRoot":""}